<project xmlns:artifact="antlib:org.apache.maven.artifact.ant" default="init">
    <path id="maven-ant-tasks.classpath" path="C:/lib/usedforartifactory/maven-ant-tasks-2.1.3.jar" /> 
   <!-- directory-properties -->
    <property name="barfile" location="C:\Program Files (x86)\Jenkins\workspace\Microservice\Eureka\Eureka_Build\target" />
    <property name="libs.dir" value="C:/lib/usedforartifactory" />
     
    <!-- maven-ant-tasks jar -->
    <property name="mvn.ant.tasks.jar" value="maven-ant-tasks-2.1.3.jar" />
 
   <!-- artifact-properties -->
    <property name="artifact.group" value="Raw_bar" />
	<!--<echo>${env}</echo>-->
	<property name="artifact.name" value="eureka-0.0.1-SNAPSHOT" />
    <property name="artifact.version" value="${BUILD_NUMBER}" />
    <property name="artifact.type" value="jar" />
    <property name="artifact.pom" value="pom.xml" />
 
    <!-- remote-repo -->
    <property name="remote.repo.url" value="http://localhost:8081/artifactory/webapp" />
    <property name="remote.repo.username" value="admin" />
    <property name="remote.repo.password" value="password" />
 
    <!-- including tha maven-ant-tasks-jar into classpath -->
    <path id="maven-ant-tasks.classpath" path="${libs.dir}/${mvn.ant.tasks.jar}" />
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="antlib:org.apache.maven.artifact.ant" classpathref="maven-ant-tasks.classpath" />
 
    <!-- init-task for coupling following tasks -->
    <target name="init">
		<antcall target="clean" />
		<antcall target="UploadArtifact" />		
    </target>
 
    <!-- deploy-task for creating and writing a temporary pom-file and deploying the artifact beside this pom-file -->
    
	<target name="UploadArtifact">
        <artifact:pom id="tmp.pom" groupid="${artifact.group}" artifactid="${artifact.name}" version="${artifact.version}" packaging="${artifact.type}" name="${artifact.name}" />
        <artifact:writepom pomRefId="tmp.pom" file="${artifact.pom}"/>
        <artifact:deploy file="${barfile}/${artifact.name}.${artifact.type}">
            <remoteRepository url="${remote.repo.url}">
                <authentication username="${remote.repo.username}" password="${remote.repo.password}" />
            </remoteRepository>
            <pom file="${artifact.pom}" />            
        </artifact:deploy>
    </target>
     
    <!-- clean-task for deletion of an earlier created temporary pom-file -->
    <target name="clean">
        <delete file="${artifact.pom}" />
    </target>
	 
</project>